@page "/accountregistration"
@using AplikacjaInzynierska.Authentication
@using AplikacjaInzynierska.Services
@using AplikacjaInzynierska.Data
@inject GroupUserService groupUserService
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager
@inherits OwningComponentBase<GroupUserService>

<EditForm Model="model" >
    <div class="row justify-content-md-center">
        <div class="col-5 border p-3 mb-2 bg-light text-dark text-center rounded">
            <p class="fs-4 fw-bold">
                Rejestracja konta
            </p>
            <div class="input-group mb-3">
                <label class="col-sm-5 input-group-text" >Imię</label>
                <InputText class="form-control" maxlength="40" @bind-Value="model.name" />
            </div>

            <div class="input-group mb-3">
                <label class="col-sm-5 input-group-text" >Nazwisko</label>
                <InputText class="form-control" maxlength="150" @bind-Value="model.surname" />
            </div>

           <div class="input-group mb-3">
                <label class="col-sm-5 input-group-text" >Email</label>
                <InputText class="form-control" maxlength="150" @bind-Value="model.email" />
            </div>

            <div class="input-group mb-3">
                <label class="col-sm-5 input-group-text" >Hasło</label>
                <InputText type="password" class="form-control" @bind-Value="model.password" />
            </div>

            <div class="input-group mb-3">
                <label class="col-sm-5 input-group-text" >Powtórz hasło</label>
                <InputText type="password" class="form-control" @bind-Value="model.repeatpassword" />
            </div>

            <div class="input-group mb-3">
                <label class="col-sm-5 input-group-text" >Data urodzenia</label>
                <InputDate class="form-control" @bind-Value="model.date_birthday" />
            </div>

             <button type="button" class="btn btn-success" @onclick="Authenticate">Utwórz konto</button>
        </div>
    </div>

</EditForm>

@code {

    Model model = new Model();

    class Model
    {
        public string? name { get; set; }
        public string? surname { get; set; }
        public DateTime date_birthday { get; set; } = DateTime.Now.ToUniversalTime();
        public string? email { get; set; }
        public string? password { get; set; }
        public string? repeatpassword { get; set; }
    }

    GroupUserClass gu = new GroupUserClass();


    void Authenticate()
    {
        if (model.password == model.repeatpassword)
        {
            var userAccount = groupUserService.GetByUserEmail(model.email);
            if (userAccount == null)
            {
                gu.id_user = 0;
                gu.id_group = 0;
                gu.admin_group = "Admin";
                gu.name = model.name;
                gu.surname = model.surname;
                gu.date_birthday = model.date_birthday.ToUniversalTime();
                gu.email = model.email;
                gu.password = model.password;
                Service.AddNewUser(gu);
                navManager.NavigateTo("/accountcreatedsuccessfully", true);
            }
            else
            {
                js.InvokeVoidAsync("alert", "Konto pod tym adresem email już istnieje!");
            }
        }
        else 
        {
            js.InvokeVoidAsync("alert", "Hasła się nie zgadzają!");
            model.password = "";
            model.repeatpassword = "";
            return;
        }
    }

}
