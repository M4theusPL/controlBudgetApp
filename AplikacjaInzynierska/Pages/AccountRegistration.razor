@page "/accountregistration"
@using AplikacjaInzynierska.Authentication
@using AplikacjaInzynierska.Services
@inject GroupUserService groupUserService
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<EditForm Model="model">
    <div class="row justify-content-md-center">
        <div class="col-5 border p-3 mb-2 bg-light text-dark text-center rounded">
            <p class="fs-4 fw-bold">
                Rejestracja konta
            </p>
            <div class="input-group mb-3">
                <label class="col-sm-5 input-group-text" >Imię</label>
                <InputText class="form-control" maxlength="40" @bind-Value="model.name" />
            </div>

            <div class="input-group mb-3">
                <label class="col-sm-5 input-group-text" >Nazwisko</label>
                <InputText class="form-control" maxlength="150" @bind-Value="model.surname" />
            </div>

           <div class="input-group mb-3">
                <label class="col-sm-5 input-group-text" >Email</label>
                <InputText class="form-control" maxlength="150" @bind-Value="model.email" />
            </div>

            <div class="input-group mb-3">
                <label class="col-sm-5 input-group-text" >Hasło</label>
                <InputText type="password" class="form-control" @bind-Value="model.password" />
            </div>

            <div class="input-group mb-3">
                <label class="col-sm-5 input-group-text" >Powtórz hasło</label>
                <InputText type="password" class="form-control" @bind-Value="model.repeatpassword" />
            </div>

            <div class="input-group mb-3">
                <label class="col-sm-5 input-group-text" >Data urodzenia</label>
                <InputText class="form-control" type="date" @bind-Value="model.date_birthday" />
            </div>

             <button type="button" class="btn btn-success">Utwórz konto</button>
        </div>
    </div>

</EditForm>

@code {

    Model model = new Model();

    class Model
    {
        public string? name { get; set; } = "name";
        public string? surname { get; set; } = "surname";
        public string? date_birthday { get; set; } = "2005, 01, 01";
        public string? email { get; set; } = "email@email.com";
        public string? password { get; set; }
        public string? repeatpassword { get; set; }
    }

    private async Task Authenticate()
    {
        //var userAccount = userAccountService.GetByUserName(model.UserName);
        //var userAccount = groupUserService.AddnewUser(model.name, model.surname, model.email, model.password, model.date_birthday);
        //if (userAccount == null || userAccount.password != model.password)
        //{
        //    await js.InvokeVoidAsync("alert", "User istnieje");
        //    return;
        //}

        Service.AddnewUser(model.name, model.surname, model.email, model.password, model.date_birthday);
    }

    

}
