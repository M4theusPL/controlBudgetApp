@page "/groupsettings"
@using AplikacjaInzynierska.Data;
@using AplikacjaInzynierska.Services;
@inject GroupUserService groupUserService
@inherits OwningComponentBase<GroupUserService>
@inject Blazored.SessionStorage.ISessionStorageService session

@if (sc == null)
{
    <EditForm Model="model">
        <div class="row justify-content-md-center">
            <div class="col-5 border p-3 mb-2 bg-light text-dark text-center rounded">
                <p class="fs-4 fw-bold">
                    Tworzenie grupy
                </p>
                <div class="input-group mb-3">
                    <label class="col-sm-5 input-group-text" >Nazwa grupy</label>
                    <InputText class="form-control" maxlength="40" @bind-Value="model.groupname" />
                </div>

                <button type="button" class="btn btn-success">Utwórz grupę</button>
            </div>
        </div>
    </EditForm>
}
else
{
        <div class="row justify-content-md-center text-center">
            
            <div class="col-11 border p-3 mb-2 bg-light text-dark rounded">
                    <p class="fs-4 fw-bold">Ustawienia grupy</p>
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr class="fw-bold">
                                <td>Email</td>
                                <td>Imię</td>
                                <td>Nazwisko</td>
                                <td>Podgląd</td>
                            </tr>
                        </thead>

                        <tbody>
                    @foreach (var item in sc)
                    {
                                    <tr>
                                        <td>@item.email</td>
                                        <td>@item.name</td>
                                        <td>@item.surname</td>
                                        <td>
                                            <NavLink class="nav-link" href="/groupusersettings">
                                                <span class="material-icons" aria-hidden="true">search</span>
                                            </NavLink>
                                        </td>
                                    </tr>
                    }
                        </tbody>
                    </table>

                        <EditForm Model="model">
                            <div class="row justify-content-md-center">
                                <div class="col-5 mb-2 bg-light text-dark text-center rounded">
                                    <p class="fs-4 fw-bold">
                                        Dodawanie członka grupy
                                    </p>
                                    <div class="input-group mb-3">
                                        <label class="col-sm-5 input-group-text" >Email</label>
                                        <InputText class="form-control" maxlength="40" @bind-Value="model.email" />
                                    </div>

                                    <button type="button" class="btn btn-success">Dodaj użytkownika</button>
                                </div>
                            </div>
                        </EditForm>
            </div>
        </div>
}

@code {

    Model model = new Model();

    class Model
    {
        public string? groupname { get; set; }
        public string? email { get; set; }
    }

    public UserInformation userInfo;
    public System.Collections.Generic.IList<GroupUserClass> sc;

    protected override async Task OnInitializedAsync()
    {
        userInfo = await session.GetItemAsync<UserInformation>("UserInfo");
        var email = userInfo.email;

        var userInformation = groupUserService.GetByUserEmail(email);
        var id_group = userInformation.id_group;


        if (id_group == 0)
        {
            sc = null;
        }
        else
        {
            sc = Service.displayUsersGroup(id_group);
            //sc = Service.displayuser();
        }
    }

}
