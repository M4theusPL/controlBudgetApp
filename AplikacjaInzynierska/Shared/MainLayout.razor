@using AplikacjaInzynierska.Authentication
@inherits LayoutComponentBase
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<PageTitle>Aplikacja Inżynierska</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <span class="top-row px-4"></span>
        @*<div class="top-row px-4">
            
            <AuthorizeView>
                <Authorized>
                    <NavLink class="nav-link" href="/groupsettings">
                        <span class="oi oi-people" aria-hidden="true"></span> Moja grupa
                    </NavLink>
                    <NavLink class="nav-link" href="/useraccount">
                        <span class="oi oi-person" aria-hidden="true"></span> Moje konto
                    </NavLink>
                    <NavLink class="nav-link" @onclick="Logout" href="javascript:void(0)">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Wyloguj się
                    </NavLink>
                    <a @onclick="Logout" href="javascript:void(0)">Logout</a>
                </Authorized>
                <NotAuthorized>
                    <NavLink class="nav-link" href="/login">
                        <span class="material-icons">login</span>
                        @*<span class="oi oi-account-login" aria-hidden="true"></span>Zaloguj się
                    </NavLink>
                    
                    <a href="/login">Login</a>
                </NotAuthorized>
            </AuthorizeView>
        </div>*@

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code{
    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        navManager.NavigateTo("/", true);
    }
}