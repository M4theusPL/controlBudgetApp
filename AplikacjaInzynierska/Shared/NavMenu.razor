@using AplikacjaInzynierska.Authentication
@using AplikacjaInzynierska.Services;
@using AplikacjaInzynierska.Data;
@inherits LayoutComponentBase
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager
@inject LogsService logsService
@using System.Security.Claims

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">controlBudgetApp</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="material-icons" aria-hidden="true">home</span> Strona Główna
            </NavLink>
        </div>
        
        <AuthorizeView>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="newtransaction">
                    <span class="material-icons" aria-hidden="true">note_add</span> Nowa Transakcja
                </NavLink>
            </div>
        </AuthorizeView>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="listtransaction">
                        <span class="material-icons" aria-hidden="true">receipt_long</span> Lista Transakcji
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/groupsettings">
                        <span class="material-icons" aria-hidden="true">group</span> Moja grupa
                    </NavLink>
                    <NavLink class="nav-link" href="/accountsettings">
                        <span class="material-icons" aria-hidden="true">person</span> Moje konto
                    </NavLink>
                    <NavLink class="nav-link" @onclick="Logout" href="javascript:void(0)">
                        <span class="material-icons" aria-hidden="true">logout</span> Wyloguj się
                    </NavLink>
                    </div>
                </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/login">
                        <span class="material-icons">login</span> Zaloguj się
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Logout()
    {
        var authState = await authenticationState;
        LogsClass log = new LogsClass();

        var dateNow = DateTime.Now.ToString("yyyy-MM-dd");
        var timeNow = DateTime.Now.ToString("HH:mm:ss");

        log.date = DateTime.Parse(dateNow).ToUniversalTime();
        log.time = TimeOnly.Parse(timeNow);
        var numberIDuser = authState.User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
        log.id_user = Convert.ToInt32(numberIDuser);
        log.event_log = "successful logout";
        logsService.AddNewEvent(log);

        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        navManager.NavigateTo("/", true);
    }
}
